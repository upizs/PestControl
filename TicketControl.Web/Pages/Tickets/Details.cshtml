@page "Tickets/Edit/{ticketId:int}"
@using Microsoft.AspNetCore.Identity
@using TicketControl.Data.Models;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model TicketControl.Web.Pages.Tickets.DetailsModel
@{
    ViewData["Title"] = "Ticket Details";
}

@if (Model.Message != null)
{
    <div class="alert alert-info">
        @Model.Message
    </div>
}

<h2>@Model.Ticket.Title</h2>

<p>Project : @Model.Ticket.Project.Name</p>
<p>Type: @Model.Ticket.Type</p>
<p>Description: @Model.Ticket.Description</p>
<p>Priority: @Model.Ticket.Priority</p>
<p>Status: @Model.Ticket.Status</p>
<p>Assigned User: @if (Model.Ticket.AssignedUser != null)
            {
    @Model.Ticket.AssignedUser.UserName;
            }
else
            {
                @:None
            }

</p>
<p>Date Created: @Model.Ticket.DateCreated</p>
<p>Date Updated: @Model.Ticket.DateUpdated</p>
<p>Submited by: @Model.Ticket.SubmittedByUser</p>

@if (Model.Comments.Any())
{
    <h4>Comments</h4>
    <partial name="_CommentTable" model="@Model.Comments" />
}
<!--Also a button for edit and all tickets for this project-->
@if (SignInManager.IsSignedIn(User))
{
    <!--Comment section-->

    <form method="post" asp-page-handler="comment">
        <input type="hidden" asp-for="Ticket.Id" />

        <div class="form-group">
            <label asp-for="Comment.Message"></label>
            <input asp-for="Comment.Message" class="form-control" />
            @Html.ValidationMessageFor(model => model.Comment.Message, "", new { @class = "text-danger" })
        </div>

        <button type="submit" class="btn btn-primary">Add</button>

    </form>
}
@if (UserManager.GetUserId(User) == Model.Ticket.AssignedUserId
&& Model.Ticket.Status == Status.Assigned)
{
    <!--Start working on ticket button-->

<form method="post" asp-page-handler="changestatus">
    <input type="hidden" asp-for="Ticket.Id" />
    <input type="hidden" name="status" value="@Status.InProgress" />
    <button type="submit" class="btn btn-info btn-icon-split ">
        <span class="icon text-white"><i class="fas fa-keyboard"></i></span>
        <span class="text">Start working on!</span>
    </button>
</form>

}
@if (UserManager.GetUserId(User) == Model.Ticket.AssignedUserId
&& Model.Ticket.Status == Status.InProgress)
{
    <!--Ticket done button-->

    <form method="post" asp-page-handler="changestatus">
        <input type="hidden" asp-for="Ticket.Id" />
        <input type="hidden" name="status" value="@Status.Done"/>
        <button type="submit" class="btn btn-success btn-icon-split ">
            <span class="icon text-white"><i class="fas fa-check"></i></span>
            <span class="text">Done!</span>
        </button>
    </form>
}
@if (User.IsInRole("Admin"))
{
    <!--Assign users to ticket button-->

    <a class="btn btn-info"
       asp-page="/Tickets/AssignUser"
       asp-route-ticketId="@Model.Ticket.Id">Manage User</a>
    <!--Edit ticket button-->

    <a asp-page="/Tickets/Edit"
       asp-route-ticketId="@Model.Ticket.Id"
       class="btn btn-primary">Edit</a>
    if (Model.Ticket.Status == Status.Done)
    {
        <!--Close ticket button-->
        <form method="post" asp-page-handler="changestatus">
            <input type="hidden" asp-for="Ticket.Id" />
            <input type="hidden" name="status" value="@Status.Closed" />
            <button type="submit" class="btn btn-success btn-icon-split ">
                <span class="icon text-white"><i class="fas fa-check"></i></span>
                <span class="text">Close!</span>
            </button>
        </form>
    }

}

<a asp-page="/Tickets/Index"
   class="btn btn-primary">All Tickets</a>

<a asp-page="/Tickets/MyTickets"
   class="btn btn-primary">My Tickets</a>



